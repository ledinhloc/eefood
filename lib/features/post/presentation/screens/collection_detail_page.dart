import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import '../../../../core/di/injection.dart';
import '../provider/collection_cubit.dart';
import '../provider/collection_state.dart';
import '../widgets/collection/collection_more_button.dart';
import '../widgets/collection/post_summary_card.dart';
import '../../../../../core/widgets/custom_bottom_sheet.dart'; // n·∫øu b·∫°n ƒëang d√πng h√†m showCustomBottomSheet

class CollectionDetailPage extends StatefulWidget {
  final int collectionId;
  const CollectionDetailPage({super.key, required this.collectionId});

  @override
  State<CollectionDetailPage> createState() => _CollectionDetailPageState();
}

class _CollectionDetailPageState extends State<CollectionDetailPage> {
  @override
  void initState() {
    super.initState();
    getIt<CollectionCubit>().selectCollectionDetail(widget.collectionId);
  }
  @override
  Widget build(BuildContext context) {
    final cubit = getIt<CollectionCubit>();

    return BlocBuilder<CollectionCubit, CollectionState>(
      builder: (context, state) {
        final collection = state.selectedCollection;

        if (collection == null) {
          return const Scaffold(
            body: Center(child: CircularProgressIndicator()),
          );
        }

        final name = collection.name;
        final posts = collection.posts ?? [];

        return Scaffold(
          appBar: AppBar(
            title: Text(name.isNotEmpty ? name : ''),
            actions: [
              CollectionMoreButton(
                collection: collection,
                iconColor: Colors.black,
              ),
            ],
          ),
          body: posts.isEmpty
              ? const Center(child: Text('Ch∆∞a c√≥ b√†i post n√†o'))
              : GridView.builder(
            padding: const EdgeInsets.all(16),
            gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
              crossAxisCount: 2,
              mainAxisExtent: 220,
              crossAxisSpacing: 10,
              mainAxisSpacing: 10,
            ),
            itemCount: posts.length,
            itemBuilder: (context, index) {
              final post = posts[index];
              return PostSummaryCard(
                recipe: post,
                currentCollectionId: collection.id,
              );
            },
          ),
        );
      },
    );
  }

  // üîπ ƒê·ªïi t√™n b·ªô s∆∞u t·∫≠p
  void _showRenameDialog(BuildContext context, CollectionCubit cubit, String currentName) {
    final controller = TextEditingController(text: currentName);

    showDialog(
      context: context,
      builder: (_) => AlertDialog(
        title: const Text('ƒê·ªïi t√™n b·ªô s∆∞u t·∫≠p'),
        content: TextField(
          controller: controller,
          decoration: const InputDecoration(hintText: 'Nh·∫≠p t√™n m·ªõi'),
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('H·ªßy'),
          ),
          ElevatedButton(
            onPressed: () async {
              final newName = controller.text.trim();
              if (newName.isEmpty) return;
              Navigator.pop(context);
              await cubit.updateCollection(widget.collectionId, name: newName);
            },
            child: const Text('L∆∞u'),
          ),
        ],
      ),
    );
  }

  // üîπ X√≥a b·ªô s∆∞u t·∫≠p (x√°c nh·∫≠n tr∆∞·ªõc)
  void _showDeleteConfirmation(BuildContext context, CollectionCubit cubit) {
    showDialog(
      context: context,
      builder: (_) => AlertDialog(
        title: const Text('X√≥a b·ªô s∆∞u t·∫≠p'),
        content: const Text('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b·ªô s∆∞u t·∫≠p n√†y kh√¥ng?'),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('H·ªßy'),
          ),
          ElevatedButton(
            style: ElevatedButton.styleFrom(backgroundColor: Colors.red),
            onPressed: () async {
              Navigator.pop(context); // ƒë√≥ng dialog
              await cubit.deleteCollection(widget.collectionId);
              if (context.mounted) Navigator.pop(context); // quay v·ªÅ trang tr∆∞·ªõc
            },
            child: const Text('X√≥a'),
          ),
        ],
      ),
    );
  }
}
